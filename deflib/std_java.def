# basic_frame for console prog, gui_frame for awt prog
#   Single class library don't need use frame [$list ...]

subcode: basic_frame
    $list _basic_main

fncode: _basic_main(main)
    $call main2

#---- BufferedReader ----
subcode: input(@file)
    $import java.io.*
    try{
        $(if:file=)
            # InputStreamReader wraps byte stream into char stream
            $(set:in=new InputStreamReader(System.in))
        $(else)
            $(set:in=new FileReader($(file)))
        $local BufferedReader In = new BufferedReader($(in))
        BLOCK
    }
    catch(Exception e){
    }

    subcode: get_s(v)
        $(v) = In.readLine()

#---- Scanner ----
subcode: scanner(@file)
    $import java.io.*
    $import java.util.Scanner
    $(if:file=)
        $(set:in=System.in)
    $(else)
        $(set:in=new FileReader($(file)))
    scanner = new Scanner($(in))
    BLOCK

    subcode: get_s(v)
        $(v) = scanner.nextLine()

    subcode: get_word(v)
        $(v) = scanner.next()

    subcode: get_int(v)
        $(v) = scanner.nextInt()

    subcode: get_double(v)
        $(v) = scanner.nextDouble()

#---- timing ------------------------------------ 
subcode: start_time
    $local long time_start
    time_start = System.nanoTime()

subcode: print_time(msg)
    $local long time_diff
    time_diff = System.nanoTime()-time_start
    $print "$(msg): %f sec", time_diff / 1.0e9

#---- random ---------------------------------- 
subcode: init_random
    $private Random rand
    rand = new Random

macros:
    irand: rand.nextInt($1)
    rand: rand.nextFloat()
#----------------------------------------
macros:
    atoi: Integer.parseInt($1)
    atof: Double.parseDouble($1)

    itoa: Integer.toString($1)


